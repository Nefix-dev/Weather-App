%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Fri Jan 15 11:59:15 2021
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 2 27 382 262
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 2 27 382 262
%%EndPageSetup
q 2 27 380 235 rectclip
1 0 0 -1 0 384 cm q
q
312.914 173.086 m 264.008 124.18 190.461 109.551 126.562 136.016 c 62.664
 162.484 21 224.836 21 294 c 21 298.969 25.031 303 30 303 c 114 303 l 118.969
 303 123 298.969 123 294 c 123 255.891 153.891 225 192 225 c 230.109 225
 261 255.891 261 294 c 261 298.969 265.031 303 270 303 c 354 303 l 358.969
 303 363 298.969 363 294 c 363.125 248.625 345.09 205.082 312.914 173.086
 c h
312.914 173.086 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.580392 0.792157 0.729412 ]
      /C1 [ 0.580392 0.792157 0.729412 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.580392 0.792157 0.729412 ]
      /C1 [ 0.894118 0.94902 0.933333 ]
      /N 1
   >>
   ]
   /Bounds [ 0.015 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 117.147003 486.118011 394.852997 208.412003 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
312 294 m 312 227.727 258.273 174 192 174 c 125.727 174 72 227.727 72 294
 c 72 297.027 72.113 300.027 72.336 303 c 114 303 l 118.969 303 123 298.969
 123 294 c 123 255.891 153.891 225 192 225 c 230.109 225 261 255.891 261
 294 c 261 298.969 265.031 303 270 303 c 311.664 303 l 311.887 300.027 311.996
 297.027 312 294 c h
312 294 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.976471 0.803922 0.333333 ]
      /C1 [ 0.976471 0.803922 0.333333 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.976471 0.803922 0.333333 ]
      /C1 [ 0.992157 0.952941 0.831373 ]
      /N 1
   >>
   ]
   /Bounds [ 0.015 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 156.542999 464.096008 355.457001 265.183014 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
109.965 279.047 m 105.773 261.289 89.832 248.809 71.586 249 c 53.34 249.195
 37.668 262.012 33.855 279.855 c 14.332 284.016 1.102 302.242 3.195 322.094
 c 5.293 341.945 22.039 357.012 42 357 c 108 357 l 129.16 357.008 146.469
 340.137 147 318.98 c 147.535 297.828 131.098 280.105 109.965 279.047 c 
h
109.965 279.047 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.54902 0.517647 0.737255 ]
      /C1 [ 0.54902 0.517647 0.737255 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.54902 0.517647 0.737255 ]
      /C1 [ 0.858824 0.87451 0.92549 ]
      /N 1
   >>
   ]
   /Bounds [ 0.015 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 41.247002 482.752014 158.751999 365.247986 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
343.965 279.047 m 339.773 261.289 323.832 248.809 305.586 249 c 287.34 
249.195 271.668 262.012 267.855 279.855 c 248.332 284.016 235.102 302.242
 237.195 322.094 c 239.293 341.945 256.039 357.012 276 357 c 342 357 l 363.16
 357.008 380.469 340.137 381 318.98 c 381.535 297.828 365.098 280.105 343.965
 279.047 c h
343.965 279.047 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.54902 0.517647 0.737255 ]
      /C1 [ 0.54902 0.517647 0.737255 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.54902 0.517647 0.737255 ]
      /C1 [ 0.858824 0.87451 0.92549 ]
      /N 1
   >>
   ]
   /Bounds [ 0.015 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 353.247009 482.752014 470.752014 365.247986 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
